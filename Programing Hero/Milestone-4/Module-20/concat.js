// JavaScript-এ `concat()` মেথডের কাজ হলো দুটি বা তার বেশি অ্যারে (array) বা স্ট্রিং (string) একসঙ্গে জুড়ে দেওয়া। এটি মূল ডেটাকে পরিবর্তন না করে নতুন একটি অ্যারে বা স্ট্রিং তৈরি করে ফেরত দেয়।  

// **অ্যারের ক্ষেত্রে `concat()`**
// একাধিক অ্যারে বা ভ্যালু একত্রিত করে একটি নতুন অ্যারে তৈরি করে।
// **উদাহরণ:**

let arr1 = [1, 2, 3];
let arr2 = [4, 5, 6];
let result = arr1.concat(arr2); // arr1 আর arr2 জুড়ে দেওয়া
// এখানে `arr1` ও `arr2` অপরিবর্তিত থাকে।
console.log(result);

// **আউটপুট:**
// [1, 2, 3, 4, 5, 6]


// **উদাহরণ 2 : একাধিক অ্যারে ও ভ্যালু যোগ করা:**

let arr3 = [1, 2];
let arr4 = [3, 4];
let results = arr3.concat(arr4, [5, 6], 7, 8);
console.log(result);

// **আউটপুট:**
// [1, 2, 3, 4, 5, 6, 7, 8]


// **স্ট্রিং-এর ক্ষেত্রে `concat()`**
// `concat()` স্ট্রিং জুড়ে দিয়ে নতুন একটি স্ট্রিং তৈরি করে।
// **উদাহরণ:**

let str1 = "আমরা";
let str2 = " জাভাস্ক্রিপ্ট";
let resulte = str1.concat(str2, " শিখি");
console.log(result);


// ### **বাস্তব জীবনে ব্যবহার:**
// 1. **ডেটা সংগ্রহ:** বিভিন্ন উৎস থেকে ডেটা একত্রিত করে একটি অ্যারে তৈরি করা।
// 2. **টেক্সট প্রক্রিয়াকরণ:** বিভিন্ন অংশের টেক্সট একত্রে মিলে একটি পূর্ণ বাক্য বা ডকুমেন্ট তৈরি করা।
// 3. **ইউজার ডেটা ম্যানিপুলেশন:** ব্যবহারকারীর তথ্য একত্রিত করে প্রাসঙ্গিক আউটপুট তৈরি করা।

// **মনে রাখার বিষয়:**  
// `concat()` মূল স্ট্রিং বা অ্যারে পরিবর্তন করে না; এটি সব সময় একটি নতুন ডেটা তৈরি করে।