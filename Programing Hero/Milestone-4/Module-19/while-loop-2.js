// JavaScript-এ `while` লুপ এমন একটি লুপ যা একটি নির্দিষ্ট শর্ত (condition) সত্য (true) থাকলে বারবার কোড ব্লক চালায়। এই লুপ শর্ত মিথ্যা (false) হলে থেমে যায়।  

// ### **সাধারণ কাঠামো (Syntax):**
while (condition) {
    // কোড ব্লক
}
// - **`condition`**: একটি লজিক্যাল শর্ত, যা প্রতিবার লুপ চলার আগে পরীক্ষা করা হয়।  
// - শর্ত **সত্য (true)** থাকলে লুপ চালু থাকবে, আর **মিথ্যা (false)** হলে লুপ বন্ধ হয়ে যাবে।  
// ### **উদাহরণ:**
//  **১. সংখ্যা গণনা:**
let i = 1;

while (i <= 5) {
    console.log(i);
    i++;
}
// **আউটপুট:**  
// 1  
// 2  
// 3  
// 4  
// 5

// এখানে:  
// 1. লুপের শুরুতে `i = 1`।  
// 2. লুপ চলতে থাকবে যতক্ষণ `i <= 5` সত্য।  
// 3. প্রতিবার `i++` দিয়ে মান ১ করে বাড়ানো হয়।  
// #### **২. ব্যবহারকারীর ইনপুট যাচাই:**

let password;

while (password !== "1234") {
    password = prompt("সঠিক পাসওয়ার্ড লিখুন:");
}

console.log("পাসওয়ার্ড সঠিক!");

// এখানে লুপ চলতে থাকবে যতক্ষণ না ব্যবহারকারী `1234` লিখে।  



// ### **অসীম লুপ (Infinite Loop):**
// যদি শর্ত কখনও মিথ্যা না হয়, তবে লুপ থামবে না। একে **অসীম লুপ** বলে।  

while (true) {
    console.log("এই লুপ কখনও থামবে না!");
}


// **সতর্কতা:**  
// এমন লুপ তৈরি করবেন না যা কখনও থামবে না। এটি ব্রাউজার বা স্ক্রিপ্ট হ্যাং করতে পারে।  
// ### **বাস্তব জীবনে ব্যবহার:**
// 1. **ইউজার ইনপুট যাচাই:** ব্যবহারকারীর থেকে সঠিক তথ্য না পাওয়া পর্যন্ত পুনরায় ইনপুট চাওয়া।  
// 2. **ডেটা প্রসেসিং:** কোনো ডেটা সেট থেকে প্রতিটি আইটেম প্রক্রিয়া করা।  
// 3. **অ্যালগরিদম:** নির্দিষ্ট শর্ত পূরণ না হওয়া পর্যন্ত কোনো অ্যালগরিদম চালানো।  
// **মনে রাখার বিষয়:**  
// - লুপের ভিতরে এমন কোড লিখুন যাতে শর্ত একসময় মিথ্যা হয়, অন্যথায় এটি অসীম লুপে পরিণত হবে।  
// - `while` লুপ ব্যবহার তখনই উপযুক্ত যখন শর্ত ভিত্তিক পুনরাবৃত্তি প্রয়োজন। 